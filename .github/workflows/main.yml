name: CI

on:
  push:
    branches: [ main ]

jobs:
  secret_scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: channelbeta/secret-scan@2.1.0
        with:
          exclude_path: './path_exclude/exclude.txt'

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
#to put command to build application below
      - name: Run Maven
        run: |
          sudo apt install maven
          mvn clean package
      - name: Build docker-compose
        run: docker-compose -f docker-compose.yml up --build -d
  sca:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: microsoft/ApplicationInspector-Action@v1
      - uses: actions/upload-artifact@v2
        with:
          name: AppInspectorResults
          path: AppInspectorResults.json            
  
  sast:
    needs: build
    runs-on: ubuntu-latest
    steps: 
      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: java
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
        
  unit_testing:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
#to put commands to build application, install relevant packages for testing and run testings below
      - run: echo "test"
      
  image_scan:
    needs: [sca, sast, unit_testing]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: sudo docker pull tomcat
      - uses: hands-lab/dockle-action@v1
        with:
          image: tomcat
          
  deployment: 
    needs: image_scan
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
      - run: echo "test"
#########################put commands for deployment############################

  dast:
    needs: deployment
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
      - run: echo "test"
################commands for installing dast scan package and scanning##########
      #- run: | uncomment this and comment above when actual comments are in-placed
          # Command 1
          # Command 2
################################################################################

################uploading of dast scan logs on github###########################
      #- uses: actions/upload-artifact@v2
        #with:
            #name: logs
            #path: logs/safety.log
################################################################################
      
      
  
