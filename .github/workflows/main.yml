name: CI

on:
  push:
    branches: [ main ]

jobs:
  secret_scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: channelbeta/secret-scan@2.1.0
        with:
          exclude_path: './path_exclude/exclude.txt'

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Maven
        run: |
          sudo apt install maven
          mvn clean package
      - name: Build docker-compose
        run: docker-compose -f docker-compose.yml up --build -d
      - name: Database Dump
        run: |
          mysql -h 127.0.0.1 -u root -p12345678
          use `crmmvc`
          CREATE TABLE IF NOT EXISTS `post` (  `id` int unsigned NOT NULL AUTO_INCREMENT,  `title` varchar(255) NOT NULL,  `imagepath` varchar(765) DEFAULT NULL,  `content` text,  `publishtodate` datetime DEFAULT NULL,  `status` varchar(11) DEFAULT NULL,  `owner` int unsigned DEFAULT NULL,  PRIMARY KEY (`id`,`title`),  KEY `fk_owner_id_idx` (`owner`),  CONSTRAINT `fk_owner_id` FOREIGN KEY (`owner`) REFERENCES `user` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8mb3;
          INSERT INTO `post` VALUES (1,'Hello World!!','/upload/aero.PNG','<p><em>Ispum Satu</em></p>',NULL,'publish',NULL),(2,'System dot out dot println',NULL,'<p>Ispum Dua</p>',NULL,NULL,NULL),(3,'tester4',NULL,'<p style=\"text-align: center;\">wqeqweqwe</p>','2018-03-26 02:21:00','draft',1),(4,'qewqewqe2','/upload/hg-blockshift-left3-ff.jpg','<div>wqeqwewewqe &lt;script&gt;alert(\"test\");&lt;/script&gt;</div>','2018-03-21 20:50:00','ready',2),(5,'Test posting 123456 by editor ','/upload/DISM_final_web_sm.gif','<p style=\"text-align: right;\">ewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdewqewqewqewqewqsdafdsfsdfsdew</p>\r\n<p style=\"text-align: right;\">4qewqewqewqewqsdafdsfsdfsd</p>','2018-03-25 21:57:00','ready',1),(12,'Test posting 123456 by editor ',NULL,'',NULL,'ready',NULL);
          SELECT * FROM `post`;

      - name: State Check
        run: docker ps 
          
  #test
  sca:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: microsoft/ApplicationInspector-Action@v1
      - uses: actions/upload-artifact@v2
        with:
          name: AppInspectorResults
          path: AppInspectorResults.json            
  
  sast:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: yarn install --production=false
      - name: Scan code
        uses: vtex/action-sonarqube@main
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }} # https://docs.github.com/en/actions/reference/authentication-in-a-workflow#about-the-github_token-secret
          host: ${{ secrets.SQHost }} # Variable set in the Github Secrets
          token: ${{ secrets.SQToken }} # Variable set in the Github Secrets
    
  #codeql:
    #runs-on: ubuntu-latest
    #steps:      
     # - uses: actions/checkout@v2
      
      #- name: Initialize CodeQL
       # uses: github/codeql-action/init@v1
        #with:
         # languages: java
          
      #- name: Autobuild
       # uses: github/codeql-action/autobuild@v1

     # - name: Perform CodeQL Analysis
      #  uses: github/codeql-action/analyze@v1
      #- uses: actions/upload-artifact@v2
       # with:
        #  name: /home/runner/work/_temp/codeql_databases/java.zip
         # path: java.zip         
        
  unit_testing:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
#to put commands to build application, install relevant packages for testing and run testings below
      - run: echo "test"

      - name: Run Maven
        run: |
          sudo apt install maven
          mvn clean package
      
      - name: Build Image for testing
        run: docker-compose -f docker-compose.yml up --build -d

      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
           python-version: "3.6"

      - name: Install dependencies
        run: |
           python -m pip install --upgrade pip
           pip install -r test/requirement.txt
           
      - name: Run functional tests
        run: |
           python test/landing_page_test.py
           python test/functional_test_login.py
      
  image_scan:
    needs: [sca, sast, unit_testing]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: sudo docker pull tomcat
      - uses: hands-lab/dockle-action@v1
        with:
          image: tomcat
          
  deployment: 
    needs: image_scan
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
      - run: echo "test"
#########################put commands for deployment############################

  dast:
#    needs: deployment
#remove above line one pipeline all green
    runs-on: ubuntu-latest
    env:
      ip_addr: $(python extra/get_ip.py)
    steps:
      - uses: actions/checkout@v2
      - name: Run Maven
        run: |
          sudo apt install maven
          mvn clean package
      
      - name: Build Image for testing
        run: docker-compose -f docker-compose.yml up --build -d

      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
           python-version: "3.6"

      - name: Install dependencies
        run: |
           python -m pip install --upgrade pip
           pip install -r test/requirement.txt
           
      - name: ZAP Scan
        run: python extra/get_ip.py
  
